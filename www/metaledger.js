// Generated by LiveScript 1.5.0
(function(){
  var transactionsToGraph;
  transactionsToGraph = function(it){
    var accounts, flows, nodes, links, i$, len$, transaction, source, target, temp, k, v;
    accounts = {};
    flows = {};
    nodes = [];
    links = [];
    for (i$ = 0, len$ = it.length; i$ < len$; ++i$) {
      transaction = it[i$];
      source = transaction.postings[0];
      target = transaction.postings[1];
      if (source.commodity.value > target.commodity.value) {
        temp = source;
        source = target;
        target = temp;
      }
      accounts[source.account] = {};
      accounts[target.account] = {};
      if (flows[source.account + "\n" + target.account] == null) {
        links.push({
          source: source.account,
          target: target.account
        });
        flows[source.account + "\n" + target.account] = {};
      }
    }
    for (k in accounts) {
      v = accounts[k];
      nodes.push({
        id: k
      });
    }
    return {
      nodes: nodes,
      links: links
    };
  };
  $(function(){
    var svg, width, height, simulation;
    svg = d3.select('svg');
    width = +svg.attr('width');
    height = +svg.attr('height');
    simulation = d3.forceSimulation().force('link', d3.forceLink().id(function(it){
      return it.id;
    })).force('charge', d3.forceManyBody().strength(-1000)).force('center', d3.forceCenter(0.5 * width, 0.5 * height));
    $.get('/transactions', {}, function(it){
      var graph, link, node, x$, y$;
      graph = transactionsToGraph(it);
      svg.append('svg:defs').selectAll('marker').data(['end']).enter().append('svg:marker').attr('id', String).attr('viewBox', '0 -5 10 10').attr('refX', 15).attr('refY', -1.5).attr('markerWidth', 6).attr('markerHeight', 6).attr('orient', 'auto').append('svg:path').attr('d', 'M0,-5L10,0L0,5');
      link = svg.append('svg:g').selectAll('path').data(graph.links).enter().append('svg:path').attr('class', 'link').attr('marker-end', 'url(#end)');
      node = svg.append('svg:g').attr('class', 'nodes').selectAll('circle').data(graph.nodes).enter().append('g').attr('class', 'node');
      x$ = node;
      x$.call(d3.drag().on('start', function(it){
        if (!d3.event.active) {
          simulation.alphaTarget(0.3).restart();
        }
        it.fx = it.x;
        it.fy = it.y;
      }).on('drag', function(it){
        it.fx = d3.event.x;
        it.fy = d3.event.y;
      }).on('end', function(it){
        if (!d3.event.active) {
          simulation.alphaTarget(0);
        }
        it.fx = null;
        it.fy = null;
      }));
      x$.append('circle').attr('r', 5).attr('fill', 'red');
      x$.append('text').attr('dx', 12).attr('dy', '.35em').style('font-size', 8).text(function(it){
        return it.id;
      });
      y$ = simulation;
      y$.nodes(graph.nodes).on('tick', function(){
        link.attr('d', function(it){
          var dx, dy, dr;
          dx = it.target.x - it.source.x;
          dy = it.target.y - it.source.y;
          dr = Math.sqrt(dx * dx + dy * dy);
          return "M" + it.source.x + "," + it.source.y + "A" + dr + "," + dr + " 0 0,1 " + it.target.x + "," + it.target.y;
        });
        node.attr('transform', function(it){
          return "translate(" + it.x + ", " + it.y + ")";
        });
      });
      y$.force('link').links(graph.links);
    });
  });
}).call(this);
